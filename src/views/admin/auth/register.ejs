<div class="register-container">
    <div class="logo">
        <h1>Admin Dashboard</h1>
    </div>

    <form id="registerForm" novalidate method="POST" action="/admin/register">
        <div class="form-row">
            <div class="form-group">
                <label for="name">Name</label>
                <input
                    type="text"
                    id="name"
                    name="name"
                    class="form-control"
                    placeholder="Enter your name"
                    data-validate="name"
                    required
                />
                <span class="error-text" id="nameError"
                    >Please enter a valid name.</span
                >
            </div>

            <div class="form-group">
                <label for="username">Username</label>
                <input
                    type="text"
                    id="username"
                    name="username"
                    class="form-control"
                    placeholder="Enter your username"
                    data-validate="username"
                    required
                />
                <span class="error-text" id="usernameError"
                    >Please enter a valid username.</span
                >
            </div>
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <input
                type="email"
                id="email"
                name="email"
                class="form-control"
                placeholder="Enter your email"
                required
            />
            <span class="error-text" id="emailError"
                >Please enter a valid email address.</span
            >
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <input
                type="password"
                id="password"
                name="password"
                class="form-control"
                placeholder="Choose a password"
                data-validate="password"
                required
            />
            <span class="error-text" id="passwordError"
                >Password must meet the requirements below.</span
            >
            <div class="password-requirements">
                <h4>Password Requirements:</h4>
                <div class="requirement" id="lengthReq">
                    <i class="fas fa-circle"></i> At least 8 characters
                </div>
                <div class="requirement" id="uppercaseReq">
                    <i class="fas fa-circle"></i> At least one uppercase
                    letter
                </div>
                <div class="requirement" id="lowercaseReq">
                    <i class="fas fa-circle"></i> At least one lowercase
                    letter
                </div>
                <div class="requirement" id="numberReq">
                    <i class="fas fa-circle"></i> At least one number
                </div>
                <div class="requirement" id="specialReq">
                    <i class="fas fa-circle"></i> At least one special
                    character
                </div>
            </div>
        </div>

        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <input
                type="password"
                id="confirmPassword"
                class="form-control"
                placeholder="Confirm password"
                required
            />
            <span class="error-text" id="confirmPasswordError"
                >Passwords do not match.</span
            >
        </div>

        <div class="terms">
            <input type="checkbox" id="terms" required />
            <label for="terms"
                >I agree to the Terms of Service and Privacy
                Policy</label
            >
            <span
                class="error-text"
                id="termsError"
                style="display: block; margin-left: 20px"
                >You must agree to the terms to continue.</span
            >
        </div>

        <button type="submit" class="btn">Create Account</button>

        <div class="footer">
            <p>
                Already have an account? <a href="login">Login</a>
            </p>
        </div>
    </form>
</div>

<!-- <script src="assets/js/validation.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Initialize form validation
        if (typeof initFormValidation === "function") {
            initFormValidation("registerForm");
        }

        const passwordInput = document.getElementById("password");
        const confirmPasswordInput =
            document.getElementById("confirmPassword");
        const termsCheckbox = document.getElementById("terms");
        const termsError = document.getElementById("termsError");

        // Password requirements elements
        const lengthReq = document.getElementById("lengthReq");
        const uppercaseReq = document.getElementById("uppercaseReq");
        const lowercaseReq = document.getElementById("lowercaseReq");
        const numberReq = document.getElementById("numberReq");
        const specialReq = document.getElementById("specialReq");

        // Check password requirements in real-time
        passwordInput.addEventListener("keyup", function () {
            const password = this.value;

            // Length requirement (at least 8 characters)
            if (password.length >= 8) {
                lengthReq.classList.add("valid");
                lengthReq.querySelector("i").className =
                    "fas fa-check-circle";
            } else {
                lengthReq.classList.remove("valid");
                lengthReq.querySelector("i").className =
                    "fas fa-circle";
            }

            // Uppercase letter requirement
            if (/[A-Z]/.test(password)) {
                uppercaseReq.classList.add("valid");
                uppercaseReq.querySelector("i").className =
                    "fas fa-check-circle";
            } else {
                uppercaseReq.classList.remove("valid");
                uppercaseReq.querySelector("i").className =
                    "fas fa-circle";
            }

            // Lowercase letter requirement
            if (/[a-z]/.test(password)) {
                lowercaseReq.classList.add("valid");
                lowercaseReq.querySelector("i").className =
                    "fas fa-check-circle";
            } else {
                lowercaseReq.classList.remove("valid");
                lowercaseReq.querySelector("i").className =
                    "fas fa-circle";
            }

            // Number requirement
            if (/[0-9]/.test(password)) {
                numberReq.classList.add("valid");
                numberReq.querySelector("i").className =
                    "fas fa-check-circle";
            } else {
                numberReq.classList.remove("valid");
                numberReq.querySelector("i").className =
                    "fas fa-circle";
            }

            // Special character requirement
            if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
                specialReq.classList.add("valid");
                specialReq.querySelector("i").className =
                    "fas fa-check-circle";
            } else {
                specialReq.classList.remove("valid");
                specialReq.querySelector("i").className =
                    "fas fa-circle";
            }
        });

        // Check password match when confirm password is changed
        confirmPasswordInput.addEventListener("keyup", function () {
            if (this.value !== passwordInput.value) {
                document.getElementById(
                    "confirmPasswordError"
                ).style.display = "block";
            } else {
                document.getElementById(
                    "confirmPasswordError"
                ).style.display = "none";
            }
        });

        // Handle terms checkbox
        termsCheckbox.addEventListener("change", function () {
            if (this.checked) {
                termsError.style.display = "none";
            } else {
                termsError.style.display = "block";
            }
        });

        // Initially hide terms error
        termsError.style.display = "none";

        // Handle form submission
        document
            .getElementById("registerForm")
            .addEventListener("submit", function (event) {
                event.preventDefault();

                // Validate terms checkbox
                if (!termsCheckbox.checked) {
                    termsError.style.display = "block";
                    return;
                }

                // Use the validation.js utility for validating the form
                if (
                    validateForm("registerForm") &&
                    isValidPassword(passwordInput.value) &&
                    passwordInput.value === confirmPasswordInput.value
                ) {
                    // In a real app, you would send an AJAX request to your server
                    // For demo: redirect to login page
                    window.location.href = "login.html";
                }
            });

        function isValidPassword(password) {
            const lengthValid = password.length >= 8;
            const uppercaseValid = /[A-Z]/.test(password);
            const lowercaseValid = /[a-z]/.test(password);
            const numberValid = /[0-9]/.test(password);
            const specialValid = /[!@#$%^&*(),.?":{}|<>]/.test(
                password
            );

            return (
                lengthValid &&
                uppercaseValid &&
                lowercaseValid &&
                numberValid &&
                specialValid
            );
        }
    });
</script> -->
